#!/usr/bin/env bash
bin="$(cd -- "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd -P)"
BUGS="$bin/../bugs"
fuzz="$bin/fuzz"
certified="$bin/certified"
status="$bin/status"
for i in fuzz certified status; do
  [ ! -x "${!i}" ] && echo "$(basename "$0"): missing executable $i (${!i})" >&2 && exit 1
done
"$fuzz" >/dev/null || exit
[ $# -lt 1 ] && echo "usage: $(basename "$0") <model checker> [<cores>=8]" && exit 0
cleanup() {
  echo
  jobs -rp | xargs -r kill
  wait
  if ls "$BUGS"/bug-*.btor2 2>/dev/null 2>&1; then
    echo -e "\n$(basename "$0"): $(basename $MC) on shortes bug\n"
    short=$(wc -l "$BUGS"/bug-*.btor2 | sort -n | head -n 1 | awk '{print $2}')
    model=$(realpath "$bin"/..)/bug.btor2
    witness=$(realpath "$bin"/..)/witness.btor2
    rm -f "$model" "$witness"
    cp "$short" "$model"
    "$certified" "$MC" "$model" "$witness"
    echo
    echo $(basename "$0"): "Found a bug of length" $(wc -l "$model" | awk '{print $1}'): $(head -n 1 "$model")
    echo $(basename "$0"): "with witness of length" $(wc -l "$witness" | awk '{print $1}')
    echo $(basename "$0"): "$model"
    echo $(basename "$0"): "$witness"
  fi
  trap '' EXIT HUP INT QUIT TERM
  exit
}
trap 'cleanup' EXIT HUP INT QUIT TERM
MC=$(realpath $1)
n=${2:-8}
echo $(basename "$0"): fuzzing $(basename "$MC") with $n thredas
old_bugs=$(ls "$BUGS"/bug-*.btor2 2>/dev/null | wc -l)
if [ $old_bugs -gt 0 ]; then
  echo $(basename "$0"): "Warning: $old_bugs failure inducing inputs from previous runs found"
  echo $(basename "$0"): run rm -r $(realpath $BUGS)
fi
echo
i=0
while [ $i -lt "$n" ]; do
  "$fuzz" "$MC" &
  fuzzer[${i}]=$!
  ((i += 1))
done
"$status" &
wait "${fuzzer[@]}"
