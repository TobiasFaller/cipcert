#!/usr/bin/env bash
bin=$(cd -- "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)
cipcert="$bin/cipcert"
quabs="$bin/quabs"
for i in cipcert quabs; do
    [ ! -x "${!i}" ] && echo "$(basename "$0"): missing executable $i (${!i})" >&2 && exit 1
done
[ $# -lt 2 ] && echo "usage: $(basename "$0") <model> <safe witness>" && exit 0
mkdir -p ${TMPDIR:-/tmp}/froleyks-cipcert
if [ $# -gt 2 ]; then
    TMP=$(realpath "$bin"/..)
else
    TMP=$(mktemp -d "${TMPDIR:-/tmp}"/froleyks-cipcert/$(basename "$0")-XXXXXXXX)
    trap 'rm -rf ${TMP}; exit' EXIT HUP INT QUIT TERM
fi
echo $(basename "$0"): using temp dir "$TMP"
CHECKS=(reset transition property base step)
circuits=()
for check in "${CHECKS[@]}"; do
    circuits+=("${TMP}/$check.cir")
done
echo $(basename "$0"): model   "$1"
echo $(basename "$0"): witness "$2"
"$cipcert" "$1" "$2" "${circuits[@]}" || {
    echo "$(basename "$0"): Error: cipcert failed" >&2
    exit 1
}

ALL_SUCCESS=true
for check in "${CHECKS[@]}"; do
    echo Checking $check
    r=$($quabs "${TMP}/$check.cir")
    if [[ ! "$r" =~ r\ UNSAT ]]; then
        ALL_SUCCESS=false
        echo $(basename "$0"): "Error: $check check failed" "$r"
    fi
done
if $ALL_SUCCESS; then
    echo $(basename "$0"): Certificate check passed.
    exit 0
else
    echo $(basename "$0"): Certificate check failed.
    exit 1
fi
